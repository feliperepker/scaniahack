// <auto-generated />
using ExternaAGVAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FindMyPart.Migrations
{
    [DbContext(typeof(FindMyPartsContext))]
    [Migration("20221207111535_supplier")]
    partial class supplier
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ExternaAGVAPI.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("tb_users");
                });

            modelBuilder.Entity("FindMyPart.Models.PartBrasil", b =>
                {
                    b.Property<string>("PartNumber")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("PartNumber");

                    b.ToTable("tb_monabrazil");
                });

            modelBuilder.Entity("FindMyPart.Models.PartHolanda", b =>
                {
                    b.Property<string>("PartNumber")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("PartNumber");

                    b.ToTable("tb_monaholanda");
                });

            modelBuilder.Entity("FindMyPart.Models.PartPrototipo", b =>
                {
                    b.Property<string>("PartNumber")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("PartNumber");

                    b.ToTable("tb_monaprototipo");
                });

            modelBuilder.Entity("FindMyPart.Models.PartSuecia", b =>
                {
                    b.Property<string>("PartNumber")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("PartNumber");

                    b.ToTable("tb_monasuecia");
                });

            modelBuilder.Entity("FindMyPart.Models.Supplier", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Fornecedor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tb_suppliers");
                });
#pragma warning restore 612, 618
        }
    }
}
